// This is an example config in JSONC format. Please remove all comments,
// rename the file to config.json and have it located in your app data
// directory.
//
// Your default app data directory is:
// Windows: %APPDATA%\Roaming\Anioke
// macOS: ~/Library/Application Support/Anioke
// Linux: ~/.Anioke
{
  "server": {
    // The port for listening. The RESTful server will start and listen on
    // 0.0.0.0:`port`. If it is unspecified or set as `0`, the system will find
    // a suitable port.
    "port": 0
  },
  "database": {
    // The location of database. If it is unspecified, `Anioke.db` in the app
    // data directory will used by default. You can allocate it in a sync
    // folder is you want to keep the database safely.
    "location": ""
  },
  "download": {
    // The path of yt-dlp. You may acquire an executable binary in
    // https://github.com/yt-dlp/yt-dlp/releases. If it is unspecified,
    // the internal yt-dlp binary will be used by default.
    "ytDlp": "",
    // The download location for MVs and lyrics. If it is unspecified,
    // `Media` in the app data directory will be used by default.
    "location": ""
  },
  "encode": {
    // The path of FFmpeg. You may acquire an executable binary in
    // https://ffmpeg.org/download.html. If it is unspecified, the internal
    // FFmpeg binary will be used by default.
    "ffmpeg": "",
    // The vocal removal method. Anioke will encode the MV and add an audio
    // track without voice for karaoke automatically. It can be one of
    // the `remove_center_channel` or `custom`.
    //
    // * `remove_center_channel`: separate voice and instruments by center
    //   channel removal, which may cause heavy loss of details.
    // * `custom`: use custom script for karaoke track generation.
    //
    // If it is unspecified, `remove_center_channel` will be used by default.
    "method": "remove_center_channel",
    // Custom vocal removal script. Use `${input}` for input and `${output}`
    // for output. E.g., `ffmpeg -i "${input}" -af pan="stereo|c0=c0|c1=-1*c1"
    // -ac 1 -y "${output}"`.
    "script": ""
  },
  "subtitle": {
    // The style of subtitles. It can be one of the `traditional` or `karaoke`.
    //
    // * `traditional`: render subtitles by lines.
    // * `karaoke`: render subtitles by words. Certain lyrics without karaoke
    //   format support will fallback to `traditional` rendering.
    //
    // If it is unspecified, `karaoke` will be used by default.
    "style": "karaoke",
    // Displays rubies (furiganas) instead of original characters (kanji) on
    // subtitles if available. If it is unspecified, `false` will be used by
    // default.
    "rubies": false,
    // Displays countdown of subtitles. If it is enabled, in beginning of each
    // paragraph, a countdown graph will be appended. If it is unspecified,
    // `false` will be used by default.
    "countdown": false
  },
  "providers": {
    "mv": {
      "bilibili": {
        // Hides Bilibili provider. If it is unspecified, `false` will be used
        // by default.
        "hidden": false
      },
      "youtube": {
        // Hides YouTube provider. If it is unspecified, `false` will be used
        // by default.
        "hidden": false,
        // The YouTube API key. You may acquire your own key in
        // https://developers.google.com/youtube/registering_an_application.
        "key": ""
      }
    },
    "lyrics": {
      "joysound": {
        // Hides JOYSOUND provider. If it is unspecified, `false` will be used
        // by default.
        "hidden": false
      },
      "ncm": {
        // Hides NetEase Cloud Music provider. If it is unspecified, `false`
        // will be used by default.
        "hidden": false
      },
      "petitLyrics": {
        // Hides PetitLyrics provider. If it is unspecified, `false` will be
        // used by default.
        "hidden": false
      }
    }
  }
}
